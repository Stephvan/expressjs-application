name: Deploy to ECR and Trigger ArgoDC runs

on:
 
  push:
    branches: [ dev ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Set build date as tag
      run: |
        build_date=$(date +"%Y%m%d%H%M")
        echo $build_date
        echo $build_date >> build-info.txt
        echo "::set-output name=tag::$build_date"

    - name: Build and Push Docker images
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        
      run: |
        printenv
        IMAGE_TAG=$(cat build-info.txt)
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
    ## Connect to the Git where the Helm chart is
    - name: Setup Git
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"

    - name: Checkout Infra Repo
      uses: actions/checkout@v3
      with:
        repository: ${{ secrets.INFRA_REPO_NAME }}
        ref: ${{ secrets.INFRA_REPO_BRANCH }}
        token: ${{ secrets.GH_TOKEN }} # `GH_PAT` is a secret that contains your PAT
        path: ${{ secrets.INFRA_CHECKOUT_PATH }}
    
    - name: Update Version kubertes YAML
      id: update_version
      run: |
          IMAGE_TAG=$(cat build-info.txt)  
      
          cd ${{ secrets.INFRA_CHECKOUT_PATH }}
          
          ls
          git checkout
          git status
          version=$(cat ./Infra/Kubernetes_Yaml/test.yaml | grep image: | awk '{print $2}')
          echo "Version in test.yaml: $version"
      
          new_version="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "new_version=$new_version"
      
          sed -i "s~$version~$new_version~" ./Infra/Kubernetes_Yaml/test.yaml
      
          version2=$(cat ./Infra/Helm/Node/values.yaml | grep tag: | awk '{print $2}')
          echo "Version in values.yaml: $version2"
      
          new_version2="$IMAGE_TAG"
          echo "new_version2=$new_version2"
      
          sed -i "s~$version2~$new_version2~" ./Infra/Helm/Node/values.yaml
      
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "change values of docker image"
          git status
      
          # Debug: Check content of files
          cat ./Infra/Kubernetes_Yaml/test.yaml
          cat ./Infra/Helm/Node/values.yaml
      
          git push
      
          gh_token="${{ secrets.GH_TOKEN }}"
      
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
    # - name: Update Version kubertes YAML
    #   id: update_version
              
    #   run: |
        
    #     IMAGE_TAG=$(cat build-info.txt)  

    #     cd ${{ secrets.INFRA_CHECKOUT_PATH }}
        
    #     ls
    #     git checkout
    #     git status
    #     version=$(cat ./Infra/Kubernetes_Yaml/test.yaml | grep image: | awk '{print $2}')
    #     echo "Version in test.yaml: $version"

    #     echo new_version=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     new_version=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    #     sed -i 's@$version@$new_version@' ./Infra/Kubernetes_Yaml/test.yaml

    #     version2=$(cat ./Infra/Helm/Node/values.yaml | grep tag: | awk '{print $2}')
    #     echo "Version in values.yaml: $version2"

    #     echo new_version2=$IMAGE_TAG
    #     new_version2=$IMAGE_TAG

    #     sed -i 's@$version2@$new_version2@' ./Infra/Helm/Node/values.yaml


    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git add .
    #     git commit -m "change values of docker image"
    #     git push

    #     gh_token="${{ secrets.GH_TOKEN }}"

    #   env:
    #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
